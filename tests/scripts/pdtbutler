#!/usr/bin/env python

from __future__ import print_function

# Python imports
import uhal
import click
import click_didyoumean
import time
import collections
# import operator

# PDT imports
import pdt
import pdt.cli.toolbox as toolbox
import pdt.cli.endpoint as endpoint
import pdt.cli.master as master
import pdt.cli.debug as debug
import pdt.cli.definitions as defs

# 
from click import echo, style, secho
from os.path import join, expandvars


class PDTContext: pass

CONTEXT_SETTINGS = dict(help_option_names=['-h', '--help'])

# ------------------------------------------------------------------------------
@click.group(
    cls=click_didyoumean.DYMGroup,
    context_settings=CONTEXT_SETTINGS,
)
@click.pass_context
@click.option('-c', '--connections', default='${PDT_TESTS}/etc/connections.xml', help='Path to uhal connection file(s)')
@click.option('-t', '--timeout', default=None, help='uhal timeout (sec)')
def cli(ctx, connections, timeout):
    
    # Set uhal log level
    uhal.setLogLevelTo(uhal.LogLevel.NOTICE)

    # click.secho('Connection paths: {}'.format(connections), fg='blue')
    lConnections  = toolbox.sanitizeConnectionPaths(connections)
    # click.secho('Connection paths: {}'.format(lConnections), fg='blue')

    ctx.obj.mConnectionManager = uhal.ConnectionManager(str(lConnections))
    ctx.obj.mTimeout = timeout
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
@cli.command()
@click.pass_obj
def list(obj):
    '''
    List known uhal devices.
    '''
    echo ( 'Available IPBus devices')
    for lId in obj.mConnectionManager.getDevices():
        echo ( ' - '+lId )
        
    pass
# ------------------------------------------------------------------------------




# ------------------------------------------------------------------------------
if __name__ == '__main__':
    cli.add_command(master.master)
    cli.add_command(endpoint.endpoint)
    cli.add_command(debug.debug)
    cli(obj=PDTContext())
# ------------------------------------------------------------------------------
